
üìä 1. Distribui√ß√£o de Frequ√™ncia
Conceito: Mostra quantas vezes cada valor (ou faixa de valores) aparece em um conjunto de dados.

Uso: Frequ√™ncia de notas em uma turma, quantidade de clientes por dia.

C√≥digo com histograma:

python
Copiar c√≥digo
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

dados = pd.Series([5, 7, 8, 8, 9, 10, 10, 10, 11, 12, 13, 14, 15])
sns.histplot(dados, bins=5, kde=False)
plt.title('Distribui√ß√£o de Frequ√™ncia')
plt.xlabel('Valores')
plt.ylabel('Frequ√™ncia')
plt.show()
üé≤ 2. Distribui√ß√£o de Bernoulli
Conceito: Vari√°vel com apenas dois resultados poss√≠veis, como 0 e 1 (sucesso ou fracasso).

Exemplo: Cara ou coroa, acerto ou erro.

C√≥digo:

python
Copiar c√≥digo
import numpy as np

from scipy.stats import bernoulli
resultados = bernoulli.rvs(p=0.6, size=1000)  # p √© a chance de sucesso
sns.histplot(resultados, discrete=True)
plt.title('Distribui√ß√£o de Bernoulli (p=0.6)')
plt.xlabel('Resultado')
plt.ylabel('Frequ√™ncia')
plt.show()
üßÆ 3. Distribui√ß√£o Binomial
Conceito: Soma de v√°rios experimentos de Bernoulli.

Exemplo: Jogar uma moeda 10 vezes e contar quantas saem cara.

C√≥digo:

python
Copiar c√≥digo
from scipy.stats import binom

# 10 tentativas, probabilidade de sucesso = 0.5
x = np.arange(0, 11)
y = binom.pmf(x, n=10, p=0.5)

plt.bar(x, y)
plt.title('Distribui√ß√£o Binomial (n=10, p=0.5)')
plt.xlabel('N√∫mero de Sucessos')
plt.ylabel('Probabilidade')
plt.show()
‚è≥ 4. Distribui√ß√£o Exponencial
Conceito: Modela o tempo at√© o pr√≥ximo evento (sem mem√≥ria).

Exemplo: Tempo at√© a chegada de um cliente em uma fila.

C√≥digo:

python
Copiar c√≥digo
from scipy.stats import expon

valores = expon.rvs(scale=2, size=1000)
sns.histplot(valores, bins=30, kde=True)
plt.title('Distribui√ß√£o Exponencial (Œª=0.5)')
plt.xlabel('Tempo')
plt.ylabel('Frequ√™ncia')
plt.show()
üß™ 5. Distribui√ß√£o Beta
Conceito: Distribui√ß√£o cont√≠nua em [0,1], usada para representar probabilidades vari√°veis.

Exemplo: Taxas de cliques, propor√ß√£o de sucesso em testes A/B.

C√≥digo:

python
Copiar c√≥digo
from scipy.stats import beta

x = np.linspace(0, 1, 1000)
y = beta.pdf(x, a=2, b=5)  # forma assim√©trica

plt.plot(x, y)
plt.title('Distribui√ß√£o Beta (Œ±=2, Œ≤=5)')
plt.xlabel('Probabilidade')
plt.ylabel('Densidade')
plt.show()
üìà 6. Distribui√ß√£o Normal (Gaussiana)
Conceito: Distribui√ß√£o sim√©trica em forma de sino. M√©dia = Mediana = Moda.

Exemplo: Altura de pessoas, erros de medi√ß√£o, notas padronizadas.

C√≥digo:

python
Copiar c√≥digo
from scipy.stats import norm

valores = norm.rvs(loc=0, scale=1, size=1000)
sns.histplot(valores, bins=30, kde=True)
plt.title('Distribui√ß√£o Normal Padr√£o (Œº=0, œÉ=1)')
plt.xlabel('Valores')
plt.ylabel('Frequ√™ncia')
plt.show()
‚û§ Distribui√ß√£o t de Student
Conceito: Parecida com a normal, mas com caudas mais largas. Usada quando o n √© pequeno.

Exemplo: Teste de hip√≥teses com amostras pequenas.

C√≥digo:

python
Copiar c√≥digo
from scipy.stats import t

valores_t = t.rvs(df=10, size=1000)
sns.histplot(valores_t, bins=30, kde=True)
plt.title('Distribui√ß√£o t de Student (df=10)')
plt.xlabel('Valores')
plt.ylabel('Frequ√™ncia')
plt.show()
üìê 7. Teorema do Limite Central (TLC)
Conceito: A m√©dia de v√°rias amostras aleat√≥rias de uma popula√ß√£o qualquer tende a seguir uma distribui√ß√£o normal, mesmo que os dados originais n√£o sejam normais.

Uso: Justifica o uso da normal para infer√™ncia estat√≠stica.

Simula√ß√£o com c√≥digo:

python
Copiar c√≥digo
import numpy as np

medias = []
for _ in range(1000):
    amostra = np.random.exponential(scale=2, size=50)
    medias.append(np.mean(amostra))

sns.histplot(medias, bins=30, kde=True)
plt.title('Teorema do Limite Central: M√©dia de Amostras Exponenciais')
plt.xlabel('M√©dia das Amostras')
plt.ylabel('Frequ√™ncia')
plt.show()
